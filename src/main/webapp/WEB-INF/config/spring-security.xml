<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security.xsd">

    <!-- enable use-expressions -->
    <http auto-config="true" use-expressions="true">

        <intercept-url pattern="/color**" access="hasRole('ROLE_ADMIN')" />
        <intercept-url pattern="/mark**" access="hasRole('ROLE_ADMIN')" />
        <intercept-url pattern="/gearbox**" access="hasRole('ROLE_ADMIN')" />
        <intercept-url pattern="/car**" access="isAuthenticated()" />
        <intercept-url pattern="/request**" access="isAuthenticated()" />
        <intercept-url pattern="/rent**" access="isAuthenticated()" />

        <!-- access denied page -->
        <access-denied-handler error-page="/403" />

        <form-login login-page= "/"
                    default-target-url="/"
                    username-parameter= "username"
                    password-parameter= "password"
                    login-processing-url= "/spring_security_check"
                    authentication-failure-url= "/?error=true" />

        <logout logout-url= "/spring_security_logout" logout-success-url= "/"/>

        <!--Save logged user in cookie with name key='name' -->
        <remember-me key= "myKey" token-validity-seconds= "300"/>

        <!-- enable csrf protection -->
        <csrf/>
    </http>

    <!-- Select users and user_roles from database -->
    <authentication-manager>
        <authentication-provider>
            <password-encoder ref="encoder"/>
            <jdbc-user-service data-source-ref="dataSource"
                               users-by-username-query=
                                       "select username,password, enabled from users where username=?"
                               authorities-by-username-query=
                                       "select username, role from user_roles where username =?  " />
        </authentication-provider>
    </authentication-manager>

    <beans:bean id="encoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>

    <beans:bean id="defaultHttpFirewall" class="org.springframework.security.web.firewall.DefaultHttpFirewall"/>
    <http-firewall ref="defaultHttpFirewall"/>

</beans:beans>